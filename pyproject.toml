[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dggs-benchmarking"
version = "0.1.0"
description = "Code for DGGS benchmarking"
authors = [{name = "Henrik Finsberg", email = "henriknf@simula.no"}, {name = "Magnus Heskestad Waage", email = "magnushw@simula.no"}]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
keywords = ["dggs", "benchmarking", "performance", "python"]
requires-python = ">=3.12"
dependencies = []

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
test = [
    "pytest",
]


[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false



[tool.mypy]
files = ["src/benchmark", "tests"]
ignore_missing_imports = true
exclude = [
    "docs",
    "examples",
]


[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    "examples",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
